/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L   0
#define SYMBOLS_L   1
#define NAVI_L      2
#define NUMBERS_L   3

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
    };

    combos {
    };

    combos {
        compatible = "zmk,combos";

        left_kuohao {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
        };

        right_kuohao {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        left_fangkuo {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
        };

        right_fangkuo {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
        };

        left_dakuo {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <22 23>;
        };

        right_dakuo {
            bindings = <&kp RBRC>;
            key-positions = <26 27>;
        };

        xiahua {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &ht ESCAPE Q  &kp W  &kp E                   &kp R  &kp T    &kp Y  &kp U      &kp I     &kp O                  &kp P
           &kp A  &kp S  &kp D                   &kp F  &kp G    &kp H  &kp J      &kp K     &kp L               &kp BSPC
&ht LEFT_SHIFT Z  &kp X  &kp C                   &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp FSLH  &ht RIGHT_SHIFT ENTER
                                &ht LEFT_CONTROL SPACE  &mo 1    &mo 1  &mo 2
            >;
        };

        symbols_layer {
            bindings = <
   &kp N1  &kp N2     &kp N3     &kp N4   &kp N5      &kp N6     &kp N7     &kp N8    &kp N9    &kp N0
    &kp A   &kp S  &kp LCTRL      &kp F    &kp G    &kp SEMI  &kp MINUS  &kp EQUAL   &kp SQT  &kp BSPC
&kp LSHFT   &kp X    &kp ESC    &kp DEL  &kp TAB    &kp BSLH   &kp LBKT    &kp DOT  &kp LBRC   &kp RET
                              &kp SPACE   &trans      &trans     &trans
            >;
        };

        navi_layer {
            bindings = <
      &kp F1        &kp F2        &kp F3      &kp F4   &kp F5          &kp F6          &kp F7      &kp F8        &kp F9          &kp F10
&kp CAPSLOCK        &trans      &kp HOME     &kp END  &kp F11       &kp GRAVE  &kp C_PREVIOUS  &kp C_NEXT  &kp UP_ARROW  &kp RIGHT_ARROW
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &kp F12    &kp C_VOL_DN    &kp C_VOL_UP    &kp LEFT      &kp DOWN         &kp C_PP
                                               &none   &trans      &kp C_MUTE          &trans
            >;
        };

        numbers_layer {
            bindings = <
    &kp ESC  &kp C_PP    &kp C_PREV    &kp C_NEXT          &none        &kp MINUS  &hm F7 N7  &hm F8 N8  &hm F9 N9    &kp BSPC
    &kp TAB     &none  &kp C_VOL_DN  &kp C_VOL_UP       &kp PLUS        &kp EQUAL  &hm F4 N4  &hm F5 N5  &hm F6 N6   &kp ENTER
&kp K_POWER  &kp STAR  &kp C_BRI_DN  &kp C_BRI_UP        &kp DOT       &hm F10 N0  &hm F1 N1  &hm F2 N2  &hm F3 N3  &to NAVI_L
                                            &none  &to DEFAULT_L    &to SYMBOLS_L    &kp SPC
            >;
        };
    };
};
