/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keymap_italian.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys
    };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&ht ESCAPE Q    &kp W  &kp E           &kp R            &kp T    &kp Y  &kp U  &kp I      &kp O     &kp P
&kp A           &kp S  &kp D           &kp F            &kp G    &kp H  &kp J  &kp K      &kp L     &kp BSPC
&ht LEFT_SHIFT Z&kp X  &ht LEFT_ALT C  &kp V            &kp B    &kp N  &kp M  &kp COMMA  &kp FSLH  &kp RET
                                       &ht LCTRL SPACE  &mo 1    &mo 1  &mo 2
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            bindings = <
&kp N1   &kp N2  &kp N3         &kp N4     &kp N5     &kp N6    &kp N7     &kp N8     &kp N9    &kp N0
&kp A    &kp S   &kp LC(SPACE)  &kp F      &kp G      &kp SEMI  &kp MINUS  &kp EQUAL  &kp SQT   &kp BSPC
&kp LSHFT&kp X   &kp ESC        &kp DEL    &kp TAB    &kp BSLH  &kp LBKT   &kp DOT    &kp LBRC  &kp RET
                                &kp SPACE  &trans     &trans    &trans
            >;
        };

        // Main modifiers and arrow keys

        ext_layer {
            bindings = <
&kp N1   &kp N2     &kp N3     &kp N4   &kp N5       &kp N6        &kp N7    &kp N8     &kp N9     &kp N0
&kp A    &kp S      &kp LCTRL  &kp F    &kp G        &kp PG_DN     &kp LEFT  &kp DOWN   &kp RIGHT  &kp DEL
&kp LC(Z)&kp LC(X)  &kp LC(C)  &kp TAB  &kp LC(V)    &kp LC(BSPC)  &kp BSPC  &kp MINUS  &kp EQUAL  &kp SQT
                               &trans   &kp LCTRL    &kp ENTER     &mo FNC
            >;
        };

        // Function keys with modifiers

        fnc_layer {
            bindings = <
&kp F1  &kp F2    &kp F3      &kp F4     &kp F5      &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
&sk LALT&sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT    &kp F11  &kp F12  &kp PRINTSCREEN  &trans  &trans
&none   &none     &none       &none      &none       &none    &none    &none            &none   &none
                              &none      &none       &none    &none
            >;
        };

        // Low frequency symbols.

        symbols_2_layer {
            bindings = <
&kp IT_CARET&kp IT_UNDER  &kp IT_PND   &kp IT_EUR   &kp IT_HASH    &none  &none  &none  &none  &none
&kp IT_BKTK &kp IT_TILDE  &kp IT_BSLH  &kp IT_PIPE  &kp IT_AND     &none  &none  &none  &none  &none
&none       &none         &kp IT_SECT  &kp IT_CCED  &kp IT_DEG     &none  &none  &none  &none  &none
                                       &none        &none          &none  &none
            >;
        };

        // Used to type regional accents.

        accent_layer {
            bindings = <
&none      &none        &none        &kp IT_CEGR  &none          &none  &none  &none  &none  &none
&kp IT_AGRV&kp IT_IGRV  &kp IT_OGRV  &kp IT_EGRV  &kp IT_EACU    &none  &none  &none  &none  &none
&none      &none        &none        &kp IT_UGRV  &none          &none  &none  &none  &none  &none
                                     &none        &none          &none  &none
            >;
        };

        // Used to change the keyboard's settings.

        settings_layer {
            bindings = <
&bootloader&none  &none  &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none      &none  &none  &none       &bt BT_SEL 1    &bt BT_SEL 4  &none  &none     &none  &none
&none      &none  &none  &none       &bt BT_SEL 2    &bt BT_SEL 5  &none  &none     &none  &none
                         &none       &none           &none         &none
            >;
        };
    };
};
